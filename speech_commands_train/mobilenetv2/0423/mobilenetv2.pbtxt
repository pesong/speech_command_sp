node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "ReadFile"
  op: "ReadFile"
  input: "Placeholder"
}
node {
  name: "DecodeWav"
  op: "DecodeWav"
  input: "ReadFile"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "DecodeWav"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
}
node {
  name: "Pad"
  op: "Pad"
  input: "Mul"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Slice/size"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200>\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Slice"
  op: "Slice"
  input: "Pad"
  input: "Placeholder_3"
  input: "Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16000
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "Placeholder_4"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Add"
  op: "Add"
  input: "Mul_1"
  input: "Slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/Minimum/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_value/Minimum"
  op: "Minimum"
  input: "Add"
  input: "clip_by_value/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_value/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "clip_by_value"
  op: "Maximum"
  input: "clip_by_value/Minimum"
  input: "clip_by_value/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AudioSpectrogram"
  op: "AudioSpectrogram"
  input: "clip_by_value"
  attr {
    key: "magnitude_squared"
    value {
      b: true
    }
  }
  attr {
    key: "stride"
    value {
      i: 160
    }
  }
  attr {
    key: "window_size"
    value {
      i: 480
    }
  }
}
node {
  name: "Mfcc"
  op: "Mfcc"
  input: "AudioSpectrogram"
  input: "DecodeWav:1"
  attr {
    key: "dct_coefficient_count"
    value {
      i: 40
    }
  }
  attr {
    key: "filterbank_channel_count"
    value {
      i: 40
    }
  }
  attr {
    key: "lower_frequency_limit"
    value {
      f: 20.0
    }
  }
  attr {
    key: "upper_frequency_limit"
    value {
      f: 4000.0
    }
  }
}
node {
  name: "fingerprint_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 3920
        }
      }
    }
  }
}
node {
  name: "dropout_prob"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377b\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "init_conv/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "init_conv/Conv/weights/Initializer/random_uniform/max"
  input: "init_conv/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "init_conv/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "init_conv/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "init_conv/Conv/weights/Initializer/random_uniform/mul"
  input: "init_conv/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/weights/Assign"
  op: "Assign"
  input: "init_conv/Conv/weights"
  input: "init_conv/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/weights/read"
  op: "Identity"
  input: "init_conv/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "init_conv/Conv/Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "init_conv/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta"
  input: "init_conv/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  input: "init_conv/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  input: "init_conv/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "init_conv/Conv/Conv2D"
  input: "init_conv/Conv/BatchNorm/Const"
  input: "init_conv/Conv/BatchNorm/beta/read"
  input: "init_conv/Conv/BatchNorm/Const_1"
  input: "init_conv/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg/read"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "init_conv/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "init_conv/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  input: "init_conv/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "init_conv/Conv/Relu"
  op: "Relu"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706020355
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706020355
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights"
  input: "inverted_bottleneck0_1_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/Conv2D"
  op: "Conv2D"
  input: "init_conv/Conv/Relu"
  input: "inverted_bottleneck0_1_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck0_1_0/Conv/Conv2D"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10127393901348114
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10127393901348114
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck0_1_0/Conv/Relu6"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.273861289024353
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.273861289024353
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck0_1_0/Conv_1/Conv2D"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.2314550280570984
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.2314550280570984
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights"
  input: "inverted_bottleneck1_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck1_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck1_6_1/Conv/Conv2D"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.08290266990661621
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.08290266990661621
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck1_6_1/Conv/Relu6"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.22360679507255554
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.22360679507255554
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck1_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights"
  input: "inverted_bottleneck2_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/Conv/Conv2D"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck2_6_0/Conv/Relu6"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18898223340511322
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights"
  input: "inverted_bottleneck3_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck2_6_0/Add"
  input: "inverted_bottleneck3_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck3_6_1/Conv/Conv2D"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06780634820461273
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck3_6_1/Conv/Relu6"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 144
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.18463723361492157
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.18463723361492157
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck3_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights"
  input: "inverted_bottleneck4_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/Conv/Conv2D"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck4_6_0/Conv/Relu6"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck4_6_0/Add"
  input: "inverted_bottleneck5_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck5_6_0/Conv/Conv2D"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck5_6_0/Conv/Relu6"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck5_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck4_6_0/Add"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16366341710090637
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck5_6_0/Add"
  input: "inverted_bottleneck6_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck6_6_1/Conv/Conv2D"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05877270922064781
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck6_6_1/Conv/Relu6"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 192
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1530931144952774
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1530931144952774
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck6_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/Conv/Conv2D"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck7_6_0/Conv/Relu6"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck7_6_0/Add"
  input: "inverted_bottleneck8_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck8_6_0/Conv/Conv2D"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck8_6_0/Conv/Relu6"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck8_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck7_6_0/Add"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck8_6_0/Add"
  input: "inverted_bottleneck9_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck9_6_0/Conv/Conv2D"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck9_6_0/Conv/Relu6"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck9_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck8_6_0/Add"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1157275140285492
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck9_6_0/Add"
  input: "inverted_bottleneck10_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck10_6_0/Conv/Conv2D"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.04161251708865166
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck10_6_0/Conv/Relu6"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 384
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.11180339753627777
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.11180339753627777
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck10_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/Conv/Conv2D"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck11_6_0/Conv/Relu6"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck11_6_0/Add"
  input: "inverted_bottleneck12_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck12_6_0/Conv/Conv2D"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck12_6_0/Conv/Relu6"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 96
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck12_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck11_6_0/Add"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09449111670255661
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck12_6_0/Add"
  input: "inverted_bottleneck13_6_1/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck13_6_1/Conv/Conv2D"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03399119898676872
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck13_6_1/Conv/Relu6"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 576
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0902893915772438
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0902893915772438
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck13_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/Conv/Conv2D"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck14_6_0/Conv/Relu6"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck14_6_0/Add"
  input: "inverted_bottleneck15_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck15_6_0/Conv/Conv2D"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck15_6_0/Conv/Relu6"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 160
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck15_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Add"
  op: "Add"
  input: "inverted_bottleneck14_6_0/Add"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.07319250702857971
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck15_6_0/Add"
  input: "inverted_bottleneck16_6_0/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck16_6_0/Conv/Conv2D"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/read"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_1"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.026338599622249603
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  op: "DepthwiseConv2dNative"
  input: "inverted_bottleneck16_6_0/Conv/Relu6"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 960
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/read"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_1"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  op: "Relu6"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06846532225608826
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06846532225608826
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/max"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/mul"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 320
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "inverted_bottleneck16_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/read"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_1"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/read"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/read"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Sub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.06123724207282066
      }
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv/weights/Initializer/random_uniform/max"
  input: "Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv/weights/Initializer/random_uniform/RandomUniform"
  input: "Conv/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/weights/Initializer/random_uniform"
  op: "Add"
  input: "Conv/weights/Initializer/random_uniform/mul"
  input: "Conv/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/weights/Assign"
  op: "Assign"
  input: "Conv/weights"
  input: "Conv/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/weights/read"
  op: "Identity"
  input: "Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv/Conv2D"
  op: "Conv2D"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1280
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Initializer/zeros"
  op: "Fill"
  input: "Conv/BatchNorm/beta/Initializer/zeros/shape_as_tensor"
  input: "Conv/BatchNorm/beta/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/BatchNorm/beta"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/beta"
  input: "Conv/BatchNorm/beta/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean/Initializer/zeros"
  op: "Fill"
  input: "Conv/BatchNorm/moving_mean/Initializer/zeros/shape_as_tensor"
  input: "Conv/BatchNorm/moving_mean/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/moving_mean"
  input: "Conv/BatchNorm/moving_mean/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance/Initializer/ones"
  op: "Fill"
  input: "Conv/BatchNorm/moving_variance/Initializer/ones/shape_as_tensor"
  input: "Conv/BatchNorm/moving_variance/Initializer/ones/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/moving_variance"
  input: "Conv/BatchNorm/moving_variance/Initializer/ones"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "Conv/Conv2D"
  input: "Conv/BatchNorm/Const"
  input: "Conv/BatchNorm/beta/read"
  input: "Conv/BatchNorm/Const_1"
  input: "Conv/BatchNorm/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000474974513
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg/read"
  op: "Identity"
  input: "Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg/Sub"
  op: "Sub"
  input: "Conv/BatchNorm/AssignMovingAvg/read"
  input: "Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg/Mul"
  op: "Mul"
  input: "Conv/BatchNorm/AssignMovingAvg/Sub"
  input: "Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg"
  op: "AssignSub"
  input: "Conv/BatchNorm/moving_mean"
  input: "Conv/BatchNorm/AssignMovingAvg/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg_1/read"
  op: "Identity"
  input: "Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg_1/Sub"
  op: "Sub"
  input: "Conv/BatchNorm/AssignMovingAvg_1/read"
  input: "Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg_1/Mul"
  op: "Mul"
  input: "Conv/BatchNorm/AssignMovingAvg_1/Sub"
  input: "Conv/BatchNorm/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/AssignMovingAvg_1"
  op: "AssignSub"
  input: "Conv/BatchNorm/moving_variance"
  input: "Conv/BatchNorm/AssignMovingAvg_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "Conv/Relu"
  op: "Relu"
  input: "Conv/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "AvgPool2D/AvgPool"
  op: "AvgPool"
  input: "Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.05129891633987427
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.05129891633987427
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv_1/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "Conv_1/weights/Initializer/random_uniform/max"
  input: "Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "Conv_1/weights/Initializer/random_uniform/RandomUniform"
  input: "Conv_1/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Initializer/random_uniform"
  op: "Add"
  input: "Conv_1/weights/Initializer/random_uniform/mul"
  input: "Conv_1/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1280
        }
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/weights/Assign"
  op: "Assign"
  input: "Conv_1/weights"
  input: "Conv_1/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/weights/read"
  op: "Identity"
  input: "Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Conv_1/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1/biases/Initializer/zeros"
  op: "Fill"
  input: "Conv_1/biases/Initializer/zeros/shape_as_tensor"
  input: "Conv_1/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/biases/Assign"
  op: "Assign"
  input: "Conv_1/biases"
  input: "Conv_1/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/biases/read"
  op: "Identity"
  input: "Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
}
node {
  name: "Conv_1/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/Conv2D"
  op: "Conv2D"
  input: "AvgPool2D/AvgPool"
  input: "Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "Conv_1/Conv2D"
  input: "Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\320\007\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "Conv_1/BiasAdd"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\320\007\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/shape_as_tensor"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "Reshape_1"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/ones_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/div"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "cross_entropy_1"
      }
    }
  }
}
node {
  name: "cross_entropy_1"
  op: "ScalarSummary"
  input: "cross_entropy_1/tags"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "train/gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "train/gradients/Fill"
  op: "Fill"
  input: "train/gradients/Shape"
  input: "train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Greater"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "train/gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  op: "Fill"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like/shape_as_tensor"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Equal"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/zeros_like"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/Select_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Select_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  op: "Tile"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Mul_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Sum_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
  input: "^train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights_grad/tuple/control_dependency_1"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  op: "PreventGradient"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/add_grad/Shape"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "train/gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum"
  input: "train/gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "train/gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/add_grad/Sum_1"
  input: "train/gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/Reshape_1"
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/add_grad/Reshape_1"
  input: "^train/gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "train/gradients/add_grad/tuple/control_dependency"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "train/gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/MatMul_1"
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/MatMul_grad/MatMul_1"
  input: "^train/gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "Conv_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/MatMul_grad/tuple/control_dependency"
  input: "train/gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "train/gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "train/gradients/Conv_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Reshape_1_grad/Reshape"
  input: "^train/gradients/Conv_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "train/gradients/Conv_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Reshape_1_grad/Reshape"
  input: "^train/gradients/Conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Reshape_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv_1/BiasAdd_grad/BiasAddGrad"
  input: "^train/gradients/Conv_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "AvgPool2D/AvgPool"
  input: "Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv_1/Conv2D_grad/ShapeN"
  input: "Conv_1/weights/read"
  input: "train/gradients/Conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "AvgPool2D/AvgPool"
  input: "train/gradients/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/Conv_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AvgPool2D/AvgPool_grad/Shape"
  op: "Shape"
  input: "Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/AvgPool2D/AvgPool_grad/AvgPoolGrad"
  op: "AvgPoolGrad"
  input: "train/gradients/AvgPool2D/AvgPool_grad/Shape"
  input: "train/gradients/Conv_1/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/Conv/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/AvgPool2D/AvgPool_grad/AvgPoolGrad"
  input: "Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_3"
  op: "ZerosLike"
  input: "Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_4"
  op: "ZerosLike"
  input: "Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/Conv/Relu_grad/ReluGrad"
  input: "Conv/Conv2D"
  input: "Conv/BatchNorm/Const"
  input: "Conv/BatchNorm/FusedBatchNorm:3"
  input: "Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/Conv/Conv2D_grad/ShapeN"
  input: "Conv/weights/read"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/Conv/Conv2D_grad/Const"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_5"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_6"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_7"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_8"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/Conv/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck16_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_9"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_10"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_11"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_12"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck16_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck16_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck16_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_13"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_14"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_15"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_16"
  op: "ZerosLike"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck16_6_0/Conv/Conv2D"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck15_6_0/Add"
  input: "inverted_bottleneck16_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck16_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck15_6_0/Add"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck14_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_17"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_18"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_19"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_20"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck15_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_21"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_22"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_23"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_24"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck15_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck15_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck15_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_25"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_26"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_27"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_28"
  op: "ZerosLike"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck15_6_0/Conv/Conv2D"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck14_6_0/Add"
  input: "inverted_bottleneck15_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck15_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck14_6_0/Add"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck15_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck15_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_29"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_30"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_31"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_32"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck14_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_33"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_34"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_35"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_36"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck14_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck14_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck14_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_37"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_38"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_39"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_40"
  op: "ZerosLike"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck14_6_0/Conv/Conv2D"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck14_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck14_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_1"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck14_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck14_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_41"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_42"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_43"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_44"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/AddN_1"
  input: "inverted_bottleneck13_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_45"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_46"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_47"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_48"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck13_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck13_6_1/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck13_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_49"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_50"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_51"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_52"
  op: "ZerosLike"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck13_6_1/Conv/Conv2D"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck12_6_0/Add"
  input: "inverted_bottleneck13_6_1/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck13_6_1/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck12_6_0/Add"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck11_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_53"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_54"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_55"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_56"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck12_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_57"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_58"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_59"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_60"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck12_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck12_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck12_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_61"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_62"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_63"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_64"
  op: "ZerosLike"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck12_6_0/Conv/Conv2D"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck11_6_0/Add"
  input: "inverted_bottleneck12_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck12_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck11_6_0/Add"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_2"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck12_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck12_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_2"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_2"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_65"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_66"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_67"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_68"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck11_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_69"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_70"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_71"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_72"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck11_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck11_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck11_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_73"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_74"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_75"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_76"
  op: "ZerosLike"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck11_6_0/Conv/Conv2D"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck11_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck11_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_3"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck11_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck11_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_77"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_78"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_79"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_80"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/AddN_3"
  input: "inverted_bottleneck10_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_81"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_82"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_83"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_84"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck10_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck10_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck10_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_85"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_86"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_87"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_88"
  op: "ZerosLike"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck10_6_0/Conv/Conv2D"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck9_6_0/Add"
  input: "inverted_bottleneck10_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck10_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck9_6_0/Add"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck8_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_89"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_90"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_91"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_92"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck9_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_93"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_94"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_95"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_96"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck9_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck9_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck9_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_97"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_98"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_99"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_100"
  op: "ZerosLike"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck9_6_0/Conv/Conv2D"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck8_6_0/Add"
  input: "inverted_bottleneck9_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck9_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck8_6_0/Add"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_4"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck9_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck9_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck7_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_4"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_4"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_101"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_102"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_103"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_104"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck8_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_105"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_106"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_107"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_108"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck8_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck8_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck8_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_109"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_110"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_111"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_112"
  op: "ZerosLike"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck8_6_0/Conv/Conv2D"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck7_6_0/Add"
  input: "inverted_bottleneck8_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck8_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck7_6_0/Add"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_5"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck8_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck8_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_5"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_5"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_113"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_114"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_115"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_116"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck7_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_117"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_118"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_119"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_120"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck7_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck7_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck7_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_121"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_122"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_123"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_124"
  op: "ZerosLike"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck7_6_0/Conv/Conv2D"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck7_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck7_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_6"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck7_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck7_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_125"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_126"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_127"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_128"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/AddN_6"
  input: "inverted_bottleneck6_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_129"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_130"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_131"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_132"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck6_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck6_6_1/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck6_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_133"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_134"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_135"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_136"
  op: "ZerosLike"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck6_6_1/Conv/Conv2D"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck5_6_0/Add"
  input: "inverted_bottleneck6_6_1/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck6_6_1/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck5_6_0/Add"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck4_6_0/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_137"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_138"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_139"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_140"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck5_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_141"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_142"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_143"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_144"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck5_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck5_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck5_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_145"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_146"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_147"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_148"
  op: "ZerosLike"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck5_6_0/Conv/Conv2D"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck4_6_0/Add"
  input: "inverted_bottleneck5_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck5_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck4_6_0/Add"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_7"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck5_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck5_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/AddN_7"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_149"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_150"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_151"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_152"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck4_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_153"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_154"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_155"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_156"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck4_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck4_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck4_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_157"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_158"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_159"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_160"
  op: "ZerosLike"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck4_6_0/Conv/Conv2D"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck4_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck4_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_8"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck4_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck4_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_161"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_162"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_163"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_164"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/AddN_8"
  input: "inverted_bottleneck3_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_165"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_166"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_167"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_168"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck3_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck3_6_1/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck3_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_169"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_170"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_171"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_172"
  op: "ZerosLike"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck3_6_1/Conv/Conv2D"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck2_6_0/Add"
  input: "inverted_bottleneck3_6_1/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck3_6_1/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck2_6_0/Add"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape_1"
  op: "Shape"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Sum"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Sum"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Sum_1"
  op: "Sum"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape_1"
  op: "Reshape"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Sum_1"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape_1"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape"
  input: "^train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape_1"
  input: "^train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_173"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_174"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_175"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_176"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/control_dependency_1"
  input: "inverted_bottleneck2_6_0/Conv_1/Conv2D"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_177"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_178"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_179"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_180"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck2_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck2_6_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck2_6_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_181"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_182"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_183"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_184"
  op: "ZerosLike"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck2_6_0/Conv/Conv2D"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck2_6_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck2_6_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/AddN_9"
  op: "AddN"
  input: "train/gradients/inverted_bottleneck2_6_0/Add_grad/tuple/control_dependency"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck2_6_0/Add_grad/Reshape"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_185"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_186"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_187"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_188"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/AddN_9"
  input: "inverted_bottleneck1_6_1/Conv_1/Conv2D"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/Relu6"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_189"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_190"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_191"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_192"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck1_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck1_6_1/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck1_6_1/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_193"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_194"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_195"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_196"
  op: "ZerosLike"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck1_6_1/Conv/Conv2D"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/Const"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "inverted_bottleneck1_6_1/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck1_6_1/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/zeros_like_197"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_198"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_199"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_200"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck0_1_0/Conv_1/Conv2D"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/Relu6"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/read"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/Relu6"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/control_dependency"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_201"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_202"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_203"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_204"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/Shape"
  op: "Shape"
  input: "inverted_bottleneck0_1_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  op: "DepthwiseConv2dNativeBackpropInput"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/Shape"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/read"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  op: "DepthwiseConv2dNativeBackpropFilter"
  input: "inverted_bottleneck0_1_0/Conv/Relu6"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/Shape_1"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
  input: "^train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/DepthwiseConv2dNativeBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Relu6_grad/Relu6Grad"
  op: "Relu6Grad"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency"
  input: "inverted_bottleneck0_1_0/Conv/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_205"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_206"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_207"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_208"
  op: "ZerosLike"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Relu6_grad/Relu6Grad"
  input: "inverted_bottleneck0_1_0/Conv/Conv2D"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/Const"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:3"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "init_conv/Conv/Relu"
  input: "inverted_bottleneck0_1_0/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/ShapeN"
  input: "inverted_bottleneck0_1_0/Conv/weights/read"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "init_conv/Conv/Relu"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Const"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/control_dependency"
  input: "init_conv/Conv/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_209"
  op: "ZerosLike"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_210"
  op: "ZerosLike"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_211"
  op: "ZerosLike"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/zeros_like_212"
  op: "ZerosLike"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  op: "FusedBatchNormGrad"
  input: "train/gradients/init_conv/Conv/Relu_grad/ReluGrad"
  input: "init_conv/Conv/Conv2D"
  input: "init_conv/Conv/BatchNorm/Const"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:3"
  input: "init_conv/Conv/BatchNorm/FusedBatchNorm:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.0010000000474974513
    }
  }
  attr {
    key: "is_training"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:1"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:2"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_3"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:3"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_4"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad:4"
  input: "^train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/FusedBatchNormGrad"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "init_conv/Conv/weights/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "train/gradients/init_conv/Conv/Conv2D_grad/ShapeN"
  input: "init_conv/Conv/weights/read"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "train/gradients/init_conv/Conv/Conv2D_grad/Const"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropFilter"
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropInput"
  input: "^train/gradients/init_conv/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "train/gradients/init_conv/Conv/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropFilter"
  input: "^train/gradients/init_conv/Conv/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train/gradients/init_conv/Conv/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "train/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta1_power/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta1_power/read"
  op: "Identity"
  input: "train/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "train/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train/beta2_power/Assign"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/beta2_power/read"
  op: "Identity"
  input: "train/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "init_conv/Conv/weights/Adam"
  input: "init_conv/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam/read"
  op: "Identity"
  input: "init_conv/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "init_conv/Conv/weights/Adam_1"
  input: "init_conv/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "init_conv/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta/Adam"
  input: "init_conv/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "init_conv/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 64
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 16
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 16
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\020\000\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 16
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 96
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\030\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 24
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 24
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\030\000\000\000\220\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 24
        }
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 144
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 144
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 144
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 144
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000 \000\000\000\300\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 32
        }
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 192
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 192
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 192
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 192
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\000\000\000\200\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\200\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 384
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 384
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 384
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\200\001\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 384
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000`\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 96
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 96
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000@\002\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 96
        }
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000@\002\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 576
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 576
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 576
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\002\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 576
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000\240\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 160
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 160
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\240\000\000\000\300\003\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 160
        }
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\003\000\000\000\003\000\000\000\300\003\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
        dim {
          size: 960
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 960
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 960
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\300\003\000\000@\001\000\000"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 960
        }
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 320
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 320
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "Conv/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "Conv/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "Conv/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/weights/Adam/Assign"
  op: "Assign"
  input: "Conv/weights/Adam"
  input: "Conv/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/weights/Adam/read"
  op: "Identity"
  input: "Conv/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000@\001\000\000\000\005\000\000"
      }
    }
  }
}
node {
  name: "Conv/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Conv/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Conv/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/weights/Adam_1/Assign"
  op: "Assign"
  input: "Conv/weights/Adam_1"
  input: "Conv/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/weights/Adam_1/read"
  op: "Identity"
  input: "Conv/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam/Initializer/zeros"
  op: "Fill"
  input: "Conv/BatchNorm/beta/Adam/Initializer/zeros/shape_as_tensor"
  input: "Conv/BatchNorm/beta/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/beta/Adam"
  input: "Conv/BatchNorm/beta/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam/read"
  op: "Identity"
  input: "Conv/BatchNorm/beta/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1280
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1280
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/beta/Adam_1"
  input: "Conv/BatchNorm/beta/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv/BatchNorm/beta/Adam_1/read"
  op: "Identity"
  input: "Conv/BatchNorm/beta/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "Conv_1/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "Conv_1/weights/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1280
        }
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/weights/Adam/Assign"
  op: "Assign"
  input: "Conv_1/weights/Adam"
  input: "Conv_1/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/weights/Adam/read"
  op: "Identity"
  input: "Conv_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\000\005\000\000\350\003\000\000"
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Conv_1/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Conv_1/weights/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 1
        }
        dim {
          size: 1280
        }
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "Conv_1/weights/Adam_1"
  input: "Conv_1/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/weights/Adam_1/read"
  op: "Identity"
  input: "Conv_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "Conv_1/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "Conv_1/biases/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/biases/Adam/Assign"
  op: "Assign"
  input: "Conv_1/biases/Adam"
  input: "Conv_1/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/biases/Adam/read"
  op: "Identity"
  input: "Conv_1/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1000
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Conv_1/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Conv_1/biases/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1000
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1/Assign"
  op: "Assign"
  input: "Conv_1/biases/Adam_1"
  input: "Conv_1/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv_1/biases/Adam_1/read"
  op: "Identity"
  input: "Conv_1/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\320\007\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam/Assign"
  op: "Assign"
  input: "Variable/Adam"
  input: "Variable/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam/read"
  op: "Identity"
  input: "Variable/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\320\007\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2000
        }
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam_1/Assign"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "Variable/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam_1/read"
  op: "Identity"
  input: "Variable/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam/Assign"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam/read"
  op: "Identity"
  input: "Variable_1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 12
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam_1/Assign"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "Variable_1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam_1/read"
  op: "Identity"
  input: "Variable_1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "train/Adam/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "train/Adam/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "train/Adam/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "train/Adam/update_init_conv/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "init_conv/Conv/weights"
  input: "init_conv/Conv/weights/Adam"
  input: "init_conv/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/init_conv/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_init_conv/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "init_conv/Conv/BatchNorm/beta"
  input: "init_conv/Conv/BatchNorm/beta/Adam"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/init_conv/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/Conv/weights"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/Conv_1/weights"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck0_1_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/Conv/weights"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/Conv_1/weights"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck1_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/Conv/weights"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/Conv_1/weights"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck2_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/Conv/weights"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/Conv_1/weights"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck3_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/Conv/weights"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/Conv_1/weights"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck4_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck5_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck6_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck7_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck8_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck9_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck10_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck11_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck12_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck13_6_1/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck14_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck15_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/depthwise_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/inverted_bottleneck16_6_0/Conv_1/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv/weights"
  input: "Conv/weights/Adam"
  input: "Conv/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv/BatchNorm/beta/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv/BatchNorm/beta"
  input: "Conv/BatchNorm/beta/Adam"
  input: "Conv/BatchNorm/beta/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv/BatchNorm/FusedBatchNorm_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv_1/weights"
  input: "Conv_1/weights/Adam"
  input: "Conv_1/weights/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Conv_1/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "Conv_1/biases"
  input: "Conv_1/biases/Adam"
  input: "Conv_1/biases/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/update_Variable_1/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "train/beta1_power/read"
  input: "train/beta2_power/read"
  input: "train/learning_rate_input"
  input: "train/Adam/beta1"
  input: "train/Adam/beta2"
  input: "train/Adam/epsilon"
  input: "train/gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "train/Adam/mul"
  op: "Mul"
  input: "train/beta1_power/read"
  input: "train/Adam/beta1"
  input: "^train/Adam/update_init_conv/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_init_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv/weights/ApplyAdam"
  input: "^train/Adam/update_Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_Conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign"
  op: "Assign"
  input: "train/beta1_power"
  input: "train/Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam/mul_1"
  op: "Mul"
  input: "train/beta2_power/read"
  input: "train/Adam/beta2"
  input: "^train/Adam/update_init_conv/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_init_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv/weights/ApplyAdam"
  input: "^train/Adam/update_Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_Conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "train/Adam/Assign_1"
  op: "Assign"
  input: "train/beta2_power"
  input: "train/Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/Adam"
  op: "NoOp"
  input: "^train/Adam/update_init_conv/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_init_conv/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv/weights/ApplyAdam"
  input: "^train/Adam/update_Conv/BatchNorm/beta/ApplyAdam"
  input: "^train/Adam/update_Conv_1/weights/ApplyAdam"
  input: "^train/Adam/update_Conv_1/biases/ApplyAdam"
  input: "^train/Adam/update_Variable/ApplyAdam"
  input: "^train/Adam/update_Variable_1/ApplyAdam"
  input: "^train/Adam/Assign"
  input: "^train/Adam/Assign_1"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "add"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative/Const"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (groundtruth_input:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "groundtruth_input"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency"
  op: "Identity"
  input: "groundtruth_input"
  input: "^confusion_matrix/assert_non_negative/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  op: "LessEqual"
  input: "confusion_matrix/assert_non_negative_1/Const"
  input: "ArgMax"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  op: "All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/LessEqual"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` contains negative values"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x >= 0 did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (ArgMax:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/All"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "ArgMax"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_1"
  op: "Identity"
  input: "ArgMax"
  input: "^confusion_matrix/assert_non_negative_1/assert_less_equal/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 12
      }
    }
  }
}
node {
  name: "confusion_matrix/Cast_2"
  op: "Cast"
  input: "confusion_matrix/Cast_2/x"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/All"
  op: "All"
  input: "confusion_matrix/assert_less/Less"
  input: "confusion_matrix/assert_less/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`labels` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less/All"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_2"
  op: "Identity"
  input: "confusion_matrix/control_dependency"
  input: "^confusion_matrix/assert_less/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@groundtruth_input"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Less"
  op: "Less"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/All"
  op: "All"
  input: "confusion_matrix/assert_less_1/Less"
  input: "confusion_matrix/assert_less_1/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  op: "NoOp"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_t"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "`predictions` out of bound"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Condition x < y did not hold element-wise:"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "x (confusion_matrix/control_dependency_1:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  op: "Const"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y (confusion_matrix/Cast_2:0) = "
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  op: "Assert"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_0"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/data_4"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
        type: DT_STRING
        type: DT_INT64
        type: DT_STRING
        type: DT_INT64
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch"
  op: "Switch"
  input: "confusion_matrix/assert_less_1/All"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/All"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_1"
  op: "Switch"
  input: "confusion_matrix/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Assert/Switch_2"
  op: "Switch"
  input: "confusion_matrix/Cast_2"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/Cast_2"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  op: "Identity"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Assert"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@confusion_matrix/assert_less_1/Assert/AssertGuard/switch_f"
      }
    }
  }
}
node {
  name: "confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  op: "Merge"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency_1"
  input: "confusion_matrix/assert_less_1/Assert/AssertGuard/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "confusion_matrix/control_dependency_3"
  op: "Identity"
  input: "confusion_matrix/control_dependency_1"
  input: "^confusion_matrix/assert_less_1/Assert/AssertGuard/Merge"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@ArgMax"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000"
      }
    }
  }
}
node {
  name: "confusion_matrix/stack_1"
  op: "Pack"
  input: "confusion_matrix/control_dependency_2"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "axis"
    value {
      i: 1
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Shape"
  op: "Shape"
  input: "confusion_matrix/control_dependency_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "confusion_matrix/ones_like"
  op: "Fill"
  input: "confusion_matrix/ones_like/Shape"
  input: "confusion_matrix/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/ToInt64"
  op: "Cast"
  input: "confusion_matrix/stack"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "confusion_matrix/zeros"
  op: "Fill"
  input: "confusion_matrix/stack"
  input: "confusion_matrix/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "confusion_matrix/SparseTensorDenseAdd"
  op: "SparseTensorDenseAdd"
  input: "confusion_matrix/stack_1"
  input: "confusion_matrix/ones_like"
  input: "confusion_matrix/ToInt64"
  input: "confusion_matrix/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "accuracy/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "accuracy"
      }
    }
  }
}
node {
  name: "accuracy"
  op: "ScalarSummary"
  input: "accuracy/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Fill"
  input: "global_step/Initializer/zeros/shape_as_tensor"
  input: "global_step/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "global_step/read"
  input: "add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "global_step"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 439
          }
        }
        string_val: "Conv/BatchNorm/beta"
        string_val: "Conv/BatchNorm/beta/Adam"
        string_val: "Conv/BatchNorm/beta/Adam_1"
        string_val: "Conv/BatchNorm/moving_mean"
        string_val: "Conv/BatchNorm/moving_variance"
        string_val: "Conv/weights"
        string_val: "Conv/weights/Adam"
        string_val: "Conv/weights/Adam_1"
        string_val: "Conv_1/biases"
        string_val: "Conv_1/biases/Adam"
        string_val: "Conv_1/biases/Adam_1"
        string_val: "Conv_1/weights"
        string_val: "Conv_1/weights/Adam"
        string_val: "Conv_1/weights/Adam_1"
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "global_step"
        string_val: "init_conv/Conv/BatchNorm/beta"
        string_val: "init_conv/Conv/BatchNorm/beta/Adam"
        string_val: "init_conv/Conv/BatchNorm/beta/Adam_1"
        string_val: "init_conv/Conv/BatchNorm/moving_mean"
        string_val: "init_conv/Conv/BatchNorm/moving_variance"
        string_val: "init_conv/Conv/weights"
        string_val: "init_conv/Conv/weights/Adam"
        string_val: "init_conv/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/Conv/weights"
        string_val: "inverted_bottleneck0_1_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
        string_val: "inverted_bottleneck10_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
        string_val: "inverted_bottleneck11_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
        string_val: "inverted_bottleneck12_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
        string_val: "inverted_bottleneck13_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
        string_val: "inverted_bottleneck14_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
        string_val: "inverted_bottleneck15_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
        string_val: "inverted_bottleneck16_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/Conv/weights"
        string_val: "inverted_bottleneck1_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/Conv/weights"
        string_val: "inverted_bottleneck2_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/Conv/weights"
        string_val: "inverted_bottleneck3_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/Conv/weights"
        string_val: "inverted_bottleneck4_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
        string_val: "inverted_bottleneck5_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
        string_val: "inverted_bottleneck6_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
        string_val: "inverted_bottleneck7_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
        string_val: "inverted_bottleneck8_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
        string_val: "inverted_bottleneck9_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 439
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Conv/BatchNorm/beta"
  input: "Conv/BatchNorm/beta/Adam"
  input: "Conv/BatchNorm/beta/Adam_1"
  input: "Conv/BatchNorm/moving_mean"
  input: "Conv/BatchNorm/moving_variance"
  input: "Conv/weights"
  input: "Conv/weights/Adam"
  input: "Conv/weights/Adam_1"
  input: "Conv_1/biases"
  input: "Conv_1/biases/Adam"
  input: "Conv_1/biases/Adam_1"
  input: "Conv_1/weights"
  input: "Conv_1/weights/Adam"
  input: "Conv_1/weights/Adam_1"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "global_step"
  input: "init_conv/Conv/BatchNorm/beta"
  input: "init_conv/Conv/BatchNorm/beta/Adam"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  input: "init_conv/Conv/weights"
  input: "init_conv/Conv/weights/Adam"
  input: "init_conv/Conv/weights/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv/weights"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/Conv_1/weights"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv/weights"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/Conv_1/weights"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv/weights"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/Conv_1/weights"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv/weights"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/Conv_1/weights"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv/weights"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/Conv_1/weights"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "train/beta1_power"
  input: "train/beta2_power"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 439
          }
        }
        string_val: "Conv/BatchNorm/beta"
        string_val: "Conv/BatchNorm/beta/Adam"
        string_val: "Conv/BatchNorm/beta/Adam_1"
        string_val: "Conv/BatchNorm/moving_mean"
        string_val: "Conv/BatchNorm/moving_variance"
        string_val: "Conv/weights"
        string_val: "Conv/weights/Adam"
        string_val: "Conv/weights/Adam_1"
        string_val: "Conv_1/biases"
        string_val: "Conv_1/biases/Adam"
        string_val: "Conv_1/biases/Adam_1"
        string_val: "Conv_1/weights"
        string_val: "Conv_1/weights/Adam"
        string_val: "Conv_1/weights/Adam_1"
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "global_step"
        string_val: "init_conv/Conv/BatchNorm/beta"
        string_val: "init_conv/Conv/BatchNorm/beta/Adam"
        string_val: "init_conv/Conv/BatchNorm/beta/Adam_1"
        string_val: "init_conv/Conv/BatchNorm/moving_mean"
        string_val: "init_conv/Conv/BatchNorm/moving_variance"
        string_val: "init_conv/Conv/weights"
        string_val: "init_conv/Conv/weights/Adam"
        string_val: "init_conv/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/Conv/weights"
        string_val: "inverted_bottleneck0_1_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv/weights"
        string_val: "inverted_bottleneck10_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv/weights"
        string_val: "inverted_bottleneck11_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv/weights"
        string_val: "inverted_bottleneck12_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv/weights"
        string_val: "inverted_bottleneck13_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv/weights"
        string_val: "inverted_bottleneck14_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv/weights"
        string_val: "inverted_bottleneck15_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv/weights"
        string_val: "inverted_bottleneck16_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/Conv/weights"
        string_val: "inverted_bottleneck1_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/Conv/weights"
        string_val: "inverted_bottleneck2_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/Conv/weights"
        string_val: "inverted_bottleneck3_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/Conv/weights"
        string_val: "inverted_bottleneck4_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv/weights"
        string_val: "inverted_bottleneck5_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv/weights"
        string_val: "inverted_bottleneck6_6_1/Conv/weights/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv/weights"
        string_val: "inverted_bottleneck7_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv/weights"
        string_val: "inverted_bottleneck8_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv/weights"
        string_val: "inverted_bottleneck9_6_0/Conv/weights/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
        string_val: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
        string_val: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
        string_val: "train/beta1_power"
        string_val: "train/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 439
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Conv/BatchNorm/beta"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Conv/weights"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Conv/weights/Adam"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Conv/weights/Adam_1"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Conv_1/biases"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Conv_1/biases/Adam"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Conv_1/biases/Adam_1"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/biases"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Conv_1/weights"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Conv_1/weights/Adam"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Conv_1/weights/Adam_1"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Variable/Adam"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "init_conv/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "init_conv/Conv/weights"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "init_conv/Conv/weights/Adam"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "init_conv/Conv/weights/Adam_1"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@init_conv/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights"
  input: "save/RestoreV2:34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam"
  input: "save/RestoreV2:35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights"
  input: "save/RestoreV2:42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights"
  input: "save/RestoreV2:58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights"
  input: "save/RestoreV2:66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights"
  input: "save/RestoreV2:82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_86"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:86"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_87"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_88"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:88"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_89"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_90"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights"
  input: "save/RestoreV2:90"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_91"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_92"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:92"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_93"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_94"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:94"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_95"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_96"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:96"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_97"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_98"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:98"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_99"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_100"
  op: "Assign"
  input: "inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:100"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_101"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_102"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:102"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_103"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_104"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:104"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_105"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_106"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights"
  input: "save/RestoreV2:106"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_107"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_108"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:108"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_109"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_110"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:110"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_111"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_112"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:112"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_113"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_114"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights"
  input: "save/RestoreV2:114"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_115"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_116"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:116"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_117"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_118"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:118"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_119"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_120"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:120"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_121"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:121"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_122"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:122"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_123"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:123"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_124"
  op: "Assign"
  input: "inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:124"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_125"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2:125"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_126"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:126"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_127"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:127"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_128"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:128"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_129"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:129"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_130"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights"
  input: "save/RestoreV2:130"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_131"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam"
  input: "save/RestoreV2:131"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_132"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv/weights/Adam_1"
  input: "save/RestoreV2:132"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_133"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:133"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_134"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:134"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_135"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:135"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_136"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:136"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_137"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:137"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_138"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights"
  input: "save/RestoreV2:138"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_139"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam"
  input: "save/RestoreV2:139"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_140"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:140"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_141"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:141"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_142"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:142"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_143"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:143"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_144"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:144"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_145"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:145"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_146"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:146"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_147"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:147"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_148"
  op: "Assign"
  input: "inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:148"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_149"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:149"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_150"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:150"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_151"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:151"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_152"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:152"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_153"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:153"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_154"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights"
  input: "save/RestoreV2:154"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_155"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:155"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_156"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:156"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_157"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:157"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_158"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:158"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_159"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:159"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_160"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:160"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_161"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:161"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_162"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights"
  input: "save/RestoreV2:162"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_163"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:163"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_164"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:164"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_165"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:165"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_166"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:166"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_167"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:167"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_168"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:168"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_169"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:169"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_170"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:170"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_171"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:171"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_172"
  op: "Assign"
  input: "inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:172"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_173"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:173"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_174"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:174"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_175"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:175"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_176"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:176"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_177"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:177"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_178"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights"
  input: "save/RestoreV2:178"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_179"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:179"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_180"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:180"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_181"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:181"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_182"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:182"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_183"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:183"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_184"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:184"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_185"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:185"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_186"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights"
  input: "save/RestoreV2:186"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_187"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:187"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_188"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:188"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_189"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:189"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_190"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:190"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_191"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:191"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_192"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:192"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_193"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:193"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_194"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:194"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_195"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:195"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_196"
  op: "Assign"
  input: "inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:196"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_197"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:197"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_198"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:198"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_199"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:199"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_200"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:200"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_201"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:201"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_202"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights"
  input: "save/RestoreV2:202"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_203"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:203"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_204"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:204"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_205"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:205"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_206"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:206"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_207"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:207"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_208"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:208"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_209"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:209"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_210"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights"
  input: "save/RestoreV2:210"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_211"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:211"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_212"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:212"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_213"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:213"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_214"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:214"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_215"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:215"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_216"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:216"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_217"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:217"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_218"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:218"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_219"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:219"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_220"
  op: "Assign"
  input: "inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:220"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_221"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2:221"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_222"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:222"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_223"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:223"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_224"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:224"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_225"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:225"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_226"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights"
  input: "save/RestoreV2:226"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_227"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam"
  input: "save/RestoreV2:227"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_228"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv/weights/Adam_1"
  input: "save/RestoreV2:228"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_229"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:229"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_230"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:230"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_231"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:231"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_232"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:232"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_233"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:233"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_234"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights"
  input: "save/RestoreV2:234"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_235"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam"
  input: "save/RestoreV2:235"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_236"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:236"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_237"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:237"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_238"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:238"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_239"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:239"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_240"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:240"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_241"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:241"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_242"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:242"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_243"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:243"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_244"
  op: "Assign"
  input: "inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:244"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_245"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:245"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_246"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:246"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_247"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:247"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_248"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:248"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_249"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:249"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_250"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights"
  input: "save/RestoreV2:250"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_251"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:251"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_252"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:252"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_253"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:253"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_254"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:254"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_255"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:255"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_256"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:256"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_257"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:257"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_258"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights"
  input: "save/RestoreV2:258"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_259"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:259"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_260"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:260"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_261"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:261"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_262"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:262"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_263"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:263"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_264"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:264"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_265"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:265"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_266"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:266"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_267"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:267"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_268"
  op: "Assign"
  input: "inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:268"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_269"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2:269"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_270"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:270"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_271"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:271"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_272"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:272"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_273"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:273"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_274"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights"
  input: "save/RestoreV2:274"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_275"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam"
  input: "save/RestoreV2:275"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_276"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv/weights/Adam_1"
  input: "save/RestoreV2:276"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_277"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:277"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_278"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:278"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_279"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:279"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_280"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:280"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_281"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:281"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_282"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights"
  input: "save/RestoreV2:282"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_283"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam"
  input: "save/RestoreV2:283"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_284"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:284"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_285"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:285"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_286"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:286"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_287"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:287"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_288"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:288"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_289"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:289"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_290"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:290"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_291"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:291"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_292"
  op: "Assign"
  input: "inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:292"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_293"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:293"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_294"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:294"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_295"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:295"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_296"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:296"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_297"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:297"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_298"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights"
  input: "save/RestoreV2:298"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_299"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:299"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_300"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:300"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_301"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:301"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_302"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:302"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_303"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:303"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_304"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:304"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_305"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:305"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_306"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights"
  input: "save/RestoreV2:306"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_307"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:307"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_308"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:308"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_309"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:309"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_310"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:310"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_311"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:311"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_312"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:312"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_313"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:313"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_314"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:314"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_315"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:315"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_316"
  op: "Assign"
  input: "inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:316"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_317"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:317"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_318"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:318"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_319"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:319"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_320"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:320"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_321"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:321"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_322"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights"
  input: "save/RestoreV2:322"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_323"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:323"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_324"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:324"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_325"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:325"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_326"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:326"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_327"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:327"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_328"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:328"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_329"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:329"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_330"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights"
  input: "save/RestoreV2:330"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_331"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:331"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_332"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:332"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_333"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:333"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_334"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:334"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_335"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:335"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_336"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:336"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_337"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:337"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_338"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:338"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_339"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:339"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_340"
  op: "Assign"
  input: "inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:340"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_341"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
  input: "save/RestoreV2:341"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_342"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:342"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_343"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:343"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_344"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:344"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_345"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:345"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_346"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights"
  input: "save/RestoreV2:346"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_347"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam"
  input: "save/RestoreV2:347"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_348"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv/weights/Adam_1"
  input: "save/RestoreV2:348"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_349"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:349"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_350"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:350"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_351"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:351"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_352"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:352"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_353"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:353"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_354"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights"
  input: "save/RestoreV2:354"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_355"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam"
  input: "save/RestoreV2:355"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_356"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:356"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_357"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:357"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_358"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:358"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_359"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:359"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_360"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:360"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_361"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:361"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_362"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:362"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_363"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:363"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_364"
  op: "Assign"
  input: "inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:364"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_365"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:365"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_366"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:366"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_367"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:367"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_368"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:368"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_369"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:369"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_370"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights"
  input: "save/RestoreV2:370"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_371"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:371"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_372"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:372"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_373"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:373"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_374"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:374"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_375"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:375"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_376"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:376"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_377"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:377"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_378"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights"
  input: "save/RestoreV2:378"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_379"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:379"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_380"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:380"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_381"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:381"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_382"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:382"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_383"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:383"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_384"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:384"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_385"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:385"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_386"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:386"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_387"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:387"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_388"
  op: "Assign"
  input: "inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:388"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_389"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:389"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_390"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:390"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_391"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:391"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_392"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:392"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_393"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:393"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_394"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights"
  input: "save/RestoreV2:394"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_395"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:395"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_396"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:396"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_397"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:397"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_398"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:398"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_399"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:399"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_400"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:400"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_401"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:401"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_402"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights"
  input: "save/RestoreV2:402"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_403"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:403"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_404"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:404"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_405"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:405"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_406"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:406"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_407"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:407"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_408"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:408"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_409"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:409"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_410"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:410"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_411"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:411"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_412"
  op: "Assign"
  input: "inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:412"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_413"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
  input: "save/RestoreV2:413"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_414"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam"
  input: "save/RestoreV2:414"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_415"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:415"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_416"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
  input: "save/RestoreV2:416"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_417"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
  input: "save/RestoreV2:417"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_418"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights"
  input: "save/RestoreV2:418"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_419"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam"
  input: "save/RestoreV2:419"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_420"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv/weights/Adam_1"
  input: "save/RestoreV2:420"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_421"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
  input: "save/RestoreV2:421"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_422"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam"
  input: "save/RestoreV2:422"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_423"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:423"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_424"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
  input: "save/RestoreV2:424"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_425"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
  input: "save/RestoreV2:425"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_426"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights"
  input: "save/RestoreV2:426"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_427"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam"
  input: "save/RestoreV2:427"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_428"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/Conv_1/weights/Adam_1"
  input: "save/RestoreV2:428"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/Conv_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_429"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
  input: "save/RestoreV2:429"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_430"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam"
  input: "save/RestoreV2:430"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_431"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1"
  input: "save/RestoreV2:431"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_432"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
  input: "save/RestoreV2:432"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_433"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
  input: "save/RestoreV2:433"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_434"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
  input: "save/RestoreV2:434"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_435"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam"
  input: "save/RestoreV2:435"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_436"
  op: "Assign"
  input: "inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1"
  input: "save/RestoreV2:436"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_437"
  op: "Assign"
  input: "train/beta1_power"
  input: "save/RestoreV2:437"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_438"
  op: "Assign"
  input: "train/beta2_power"
  input: "save/RestoreV2:438"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv/BatchNorm/beta"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
  input: "^save/Assign_86"
  input: "^save/Assign_87"
  input: "^save/Assign_88"
  input: "^save/Assign_89"
  input: "^save/Assign_90"
  input: "^save/Assign_91"
  input: "^save/Assign_92"
  input: "^save/Assign_93"
  input: "^save/Assign_94"
  input: "^save/Assign_95"
  input: "^save/Assign_96"
  input: "^save/Assign_97"
  input: "^save/Assign_98"
  input: "^save/Assign_99"
  input: "^save/Assign_100"
  input: "^save/Assign_101"
  input: "^save/Assign_102"
  input: "^save/Assign_103"
  input: "^save/Assign_104"
  input: "^save/Assign_105"
  input: "^save/Assign_106"
  input: "^save/Assign_107"
  input: "^save/Assign_108"
  input: "^save/Assign_109"
  input: "^save/Assign_110"
  input: "^save/Assign_111"
  input: "^save/Assign_112"
  input: "^save/Assign_113"
  input: "^save/Assign_114"
  input: "^save/Assign_115"
  input: "^save/Assign_116"
  input: "^save/Assign_117"
  input: "^save/Assign_118"
  input: "^save/Assign_119"
  input: "^save/Assign_120"
  input: "^save/Assign_121"
  input: "^save/Assign_122"
  input: "^save/Assign_123"
  input: "^save/Assign_124"
  input: "^save/Assign_125"
  input: "^save/Assign_126"
  input: "^save/Assign_127"
  input: "^save/Assign_128"
  input: "^save/Assign_129"
  input: "^save/Assign_130"
  input: "^save/Assign_131"
  input: "^save/Assign_132"
  input: "^save/Assign_133"
  input: "^save/Assign_134"
  input: "^save/Assign_135"
  input: "^save/Assign_136"
  input: "^save/Assign_137"
  input: "^save/Assign_138"
  input: "^save/Assign_139"
  input: "^save/Assign_140"
  input: "^save/Assign_141"
  input: "^save/Assign_142"
  input: "^save/Assign_143"
  input: "^save/Assign_144"
  input: "^save/Assign_145"
  input: "^save/Assign_146"
  input: "^save/Assign_147"
  input: "^save/Assign_148"
  input: "^save/Assign_149"
  input: "^save/Assign_150"
  input: "^save/Assign_151"
  input: "^save/Assign_152"
  input: "^save/Assign_153"
  input: "^save/Assign_154"
  input: "^save/Assign_155"
  input: "^save/Assign_156"
  input: "^save/Assign_157"
  input: "^save/Assign_158"
  input: "^save/Assign_159"
  input: "^save/Assign_160"
  input: "^save/Assign_161"
  input: "^save/Assign_162"
  input: "^save/Assign_163"
  input: "^save/Assign_164"
  input: "^save/Assign_165"
  input: "^save/Assign_166"
  input: "^save/Assign_167"
  input: "^save/Assign_168"
  input: "^save/Assign_169"
  input: "^save/Assign_170"
  input: "^save/Assign_171"
  input: "^save/Assign_172"
  input: "^save/Assign_173"
  input: "^save/Assign_174"
  input: "^save/Assign_175"
  input: "^save/Assign_176"
  input: "^save/Assign_177"
  input: "^save/Assign_178"
  input: "^save/Assign_179"
  input: "^save/Assign_180"
  input: "^save/Assign_181"
  input: "^save/Assign_182"
  input: "^save/Assign_183"
  input: "^save/Assign_184"
  input: "^save/Assign_185"
  input: "^save/Assign_186"
  input: "^save/Assign_187"
  input: "^save/Assign_188"
  input: "^save/Assign_189"
  input: "^save/Assign_190"
  input: "^save/Assign_191"
  input: "^save/Assign_192"
  input: "^save/Assign_193"
  input: "^save/Assign_194"
  input: "^save/Assign_195"
  input: "^save/Assign_196"
  input: "^save/Assign_197"
  input: "^save/Assign_198"
  input: "^save/Assign_199"
  input: "^save/Assign_200"
  input: "^save/Assign_201"
  input: "^save/Assign_202"
  input: "^save/Assign_203"
  input: "^save/Assign_204"
  input: "^save/Assign_205"
  input: "^save/Assign_206"
  input: "^save/Assign_207"
  input: "^save/Assign_208"
  input: "^save/Assign_209"
  input: "^save/Assign_210"
  input: "^save/Assign_211"
  input: "^save/Assign_212"
  input: "^save/Assign_213"
  input: "^save/Assign_214"
  input: "^save/Assign_215"
  input: "^save/Assign_216"
  input: "^save/Assign_217"
  input: "^save/Assign_218"
  input: "^save/Assign_219"
  input: "^save/Assign_220"
  input: "^save/Assign_221"
  input: "^save/Assign_222"
  input: "^save/Assign_223"
  input: "^save/Assign_224"
  input: "^save/Assign_225"
  input: "^save/Assign_226"
  input: "^save/Assign_227"
  input: "^save/Assign_228"
  input: "^save/Assign_229"
  input: "^save/Assign_230"
  input: "^save/Assign_231"
  input: "^save/Assign_232"
  input: "^save/Assign_233"
  input: "^save/Assign_234"
  input: "^save/Assign_235"
  input: "^save/Assign_236"
  input: "^save/Assign_237"
  input: "^save/Assign_238"
  input: "^save/Assign_239"
  input: "^save/Assign_240"
  input: "^save/Assign_241"
  input: "^save/Assign_242"
  input: "^save/Assign_243"
  input: "^save/Assign_244"
  input: "^save/Assign_245"
  input: "^save/Assign_246"
  input: "^save/Assign_247"
  input: "^save/Assign_248"
  input: "^save/Assign_249"
  input: "^save/Assign_250"
  input: "^save/Assign_251"
  input: "^save/Assign_252"
  input: "^save/Assign_253"
  input: "^save/Assign_254"
  input: "^save/Assign_255"
  input: "^save/Assign_256"
  input: "^save/Assign_257"
  input: "^save/Assign_258"
  input: "^save/Assign_259"
  input: "^save/Assign_260"
  input: "^save/Assign_261"
  input: "^save/Assign_262"
  input: "^save/Assign_263"
  input: "^save/Assign_264"
  input: "^save/Assign_265"
  input: "^save/Assign_266"
  input: "^save/Assign_267"
  input: "^save/Assign_268"
  input: "^save/Assign_269"
  input: "^save/Assign_270"
  input: "^save/Assign_271"
  input: "^save/Assign_272"
  input: "^save/Assign_273"
  input: "^save/Assign_274"
  input: "^save/Assign_275"
  input: "^save/Assign_276"
  input: "^save/Assign_277"
  input: "^save/Assign_278"
  input: "^save/Assign_279"
  input: "^save/Assign_280"
  input: "^save/Assign_281"
  input: "^save/Assign_282"
  input: "^save/Assign_283"
  input: "^save/Assign_284"
  input: "^save/Assign_285"
  input: "^save/Assign_286"
  input: "^save/Assign_287"
  input: "^save/Assign_288"
  input: "^save/Assign_289"
  input: "^save/Assign_290"
  input: "^save/Assign_291"
  input: "^save/Assign_292"
  input: "^save/Assign_293"
  input: "^save/Assign_294"
  input: "^save/Assign_295"
  input: "^save/Assign_296"
  input: "^save/Assign_297"
  input: "^save/Assign_298"
  input: "^save/Assign_299"
  input: "^save/Assign_300"
  input: "^save/Assign_301"
  input: "^save/Assign_302"
  input: "^save/Assign_303"
  input: "^save/Assign_304"
  input: "^save/Assign_305"
  input: "^save/Assign_306"
  input: "^save/Assign_307"
  input: "^save/Assign_308"
  input: "^save/Assign_309"
  input: "^save/Assign_310"
  input: "^save/Assign_311"
  input: "^save/Assign_312"
  input: "^save/Assign_313"
  input: "^save/Assign_314"
  input: "^save/Assign_315"
  input: "^save/Assign_316"
  input: "^save/Assign_317"
  input: "^save/Assign_318"
  input: "^save/Assign_319"
  input: "^save/Assign_320"
  input: "^save/Assign_321"
  input: "^save/Assign_322"
  input: "^save/Assign_323"
  input: "^save/Assign_324"
  input: "^save/Assign_325"
  input: "^save/Assign_326"
  input: "^save/Assign_327"
  input: "^save/Assign_328"
  input: "^save/Assign_329"
  input: "^save/Assign_330"
  input: "^save/Assign_331"
  input: "^save/Assign_332"
  input: "^save/Assign_333"
  input: "^save/Assign_334"
  input: "^save/Assign_335"
  input: "^save/Assign_336"
  input: "^save/Assign_337"
  input: "^save/Assign_338"
  input: "^save/Assign_339"
  input: "^save/Assign_340"
  input: "^save/Assign_341"
  input: "^save/Assign_342"
  input: "^save/Assign_343"
  input: "^save/Assign_344"
  input: "^save/Assign_345"
  input: "^save/Assign_346"
  input: "^save/Assign_347"
  input: "^save/Assign_348"
  input: "^save/Assign_349"
  input: "^save/Assign_350"
  input: "^save/Assign_351"
  input: "^save/Assign_352"
  input: "^save/Assign_353"
  input: "^save/Assign_354"
  input: "^save/Assign_355"
  input: "^save/Assign_356"
  input: "^save/Assign_357"
  input: "^save/Assign_358"
  input: "^save/Assign_359"
  input: "^save/Assign_360"
  input: "^save/Assign_361"
  input: "^save/Assign_362"
  input: "^save/Assign_363"
  input: "^save/Assign_364"
  input: "^save/Assign_365"
  input: "^save/Assign_366"
  input: "^save/Assign_367"
  input: "^save/Assign_368"
  input: "^save/Assign_369"
  input: "^save/Assign_370"
  input: "^save/Assign_371"
  input: "^save/Assign_372"
  input: "^save/Assign_373"
  input: "^save/Assign_374"
  input: "^save/Assign_375"
  input: "^save/Assign_376"
  input: "^save/Assign_377"
  input: "^save/Assign_378"
  input: "^save/Assign_379"
  input: "^save/Assign_380"
  input: "^save/Assign_381"
  input: "^save/Assign_382"
  input: "^save/Assign_383"
  input: "^save/Assign_384"
  input: "^save/Assign_385"
  input: "^save/Assign_386"
  input: "^save/Assign_387"
  input: "^save/Assign_388"
  input: "^save/Assign_389"
  input: "^save/Assign_390"
  input: "^save/Assign_391"
  input: "^save/Assign_392"
  input: "^save/Assign_393"
  input: "^save/Assign_394"
  input: "^save/Assign_395"
  input: "^save/Assign_396"
  input: "^save/Assign_397"
  input: "^save/Assign_398"
  input: "^save/Assign_399"
  input: "^save/Assign_400"
  input: "^save/Assign_401"
  input: "^save/Assign_402"
  input: "^save/Assign_403"
  input: "^save/Assign_404"
  input: "^save/Assign_405"
  input: "^save/Assign_406"
  input: "^save/Assign_407"
  input: "^save/Assign_408"
  input: "^save/Assign_409"
  input: "^save/Assign_410"
  input: "^save/Assign_411"
  input: "^save/Assign_412"
  input: "^save/Assign_413"
  input: "^save/Assign_414"
  input: "^save/Assign_415"
  input: "^save/Assign_416"
  input: "^save/Assign_417"
  input: "^save/Assign_418"
  input: "^save/Assign_419"
  input: "^save/Assign_420"
  input: "^save/Assign_421"
  input: "^save/Assign_422"
  input: "^save/Assign_423"
  input: "^save/Assign_424"
  input: "^save/Assign_425"
  input: "^save/Assign_426"
  input: "^save/Assign_427"
  input: "^save/Assign_428"
  input: "^save/Assign_429"
  input: "^save/Assign_430"
  input: "^save/Assign_431"
  input: "^save/Assign_432"
  input: "^save/Assign_433"
  input: "^save/Assign_434"
  input: "^save/Assign_435"
  input: "^save/Assign_436"
  input: "^save/Assign_437"
  input: "^save/Assign_438"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "cross_entropy_1"
  input: "accuracy"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^init_conv/Conv/weights/Assign"
  input: "^init_conv/Conv/BatchNorm/beta/Assign"
  input: "^init_conv/Conv/BatchNorm/moving_mean/Assign"
  input: "^init_conv/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/weights/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/weights/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/weights/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/weights/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/moving_variance/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/weights/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_mean/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/moving_variance/Assign"
  input: "^Conv/weights/Assign"
  input: "^Conv/BatchNorm/beta/Assign"
  input: "^Conv/BatchNorm/moving_mean/Assign"
  input: "^Conv/BatchNorm/moving_variance/Assign"
  input: "^Conv_1/weights/Assign"
  input: "^Conv_1/biases/Assign"
  input: "^Variable/Assign"
  input: "^Variable_1/Assign"
  input: "^train/beta1_power/Assign"
  input: "^train/beta2_power/Assign"
  input: "^init_conv/Conv/weights/Adam/Assign"
  input: "^init_conv/Conv/weights/Adam_1/Assign"
  input: "^init_conv/Conv/BatchNorm/beta/Adam/Assign"
  input: "^init_conv/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck0_1_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck1_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck2_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck3_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck4_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck5_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck6_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck7_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck8_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck9_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck10_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck11_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck12_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck13_6_1/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck14_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck15_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/weights/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/weights/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/depthwise_weights/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/SeparableConv2d/BatchNorm/beta/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/weights/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/weights/Adam_1/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam/Assign"
  input: "^inverted_bottleneck16_6_0/Conv_1/BatchNorm/beta/Adam_1/Assign"
  input: "^Conv/weights/Adam/Assign"
  input: "^Conv/weights/Adam_1/Assign"
  input: "^Conv/BatchNorm/beta/Adam/Assign"
  input: "^Conv/BatchNorm/beta/Adam_1/Assign"
  input: "^Conv_1/weights/Adam/Assign"
  input: "^Conv_1/weights/Adam_1/Assign"
  input: "^Conv_1/biases/Adam/Assign"
  input: "^Conv_1/biases/Adam_1/Assign"
  input: "^Variable/Adam/Assign"
  input: "^Variable/Adam_1/Assign"
  input: "^Variable_1/Adam/Assign"
  input: "^Variable_1/Adam_1/Assign"
  input: "^global_step/Assign"
}
versions {
  producer: 26
}
